/*
 * Plaid API Endpoints Copy 2
 *
 * A collection of Plaid API endpoints for the `sandbox` environment. Each endpoint request comes with an example request & response. It also contains 'use cases' for each product.   <br /> Before you begin, please set your `client_id` and `secret_key` variables in the Sandbox environment. You can find them in your Plaid [dashboard](https://dashboard.plaid.com/account/keys). Set the variables by clicking on the 'eye' icon in the top-right corner of the screen.
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Institution {
    #[serde(rename = "credentials")]
    pub credentials: Vec<crate::models::Credential>,
    #[serde(rename = "has_mfa")]
    pub has_mfa: bool,
    #[serde(rename = "institution_id")]
    pub institution_id: String,
    #[serde(rename = "mfa")]
    pub mfa: Vec<String>,
    #[serde(rename = "mfa_code_type")]
    pub mfa_code_type: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "products")]
    pub products: Vec<String>,
}

impl Institution {
    pub fn new(credentials: Vec<crate::models::Credential>, has_mfa: bool, institution_id: String, mfa: Vec<String>, mfa_code_type: String, name: String, products: Vec<String>) -> Institution {
        Institution {
            credentials,
            has_mfa,
            institution_id,
            mfa,
            mfa_code_type,
            name,
            products,
        }
    }
}


